// Generated by packages/langs/scripts/prepare.ts
import type { DynamicImportLanguageRegistration, BundledLanguageInfo } from '@codelex/types'

export const bundledLanguagesInfo: BundledLanguageInfo[] = [
  {
    'id': 'angular-html',
    'name': 'Angular HTML',
    'import': (() => import('@codelex/langs/angular-html')) as DynamicImportLanguageRegistration
  },
  {
    'id': 'angular-ts',
    'name': 'Angular TypeScript',
    'import': (() => import('@codelex/langs/angular-ts')) as DynamicImportLanguageRegistration
  },
  {
    'id': 'astro',
    'name': 'Astro',
    'import': (() => import('@codelex/langs/astro')) as DynamicImportLanguageRegistration
  },
  {
    'id': 'blade',
    'name': 'Blade',
    'import': (() => import('@codelex/langs/blade')) as DynamicImportLanguageRegistration
  },
  {
    'id': 'c',
    'name': 'C',
    'import': (() => import('@codelex/langs/c')) as DynamicImportLanguageRegistration
  },
  {
    'id': 'coffee',
    'name': 'CoffeeScript',
    'aliases': [
      'coffeescript'
    ],
    'import': (() => import('@codelex/langs/coffee')) as DynamicImportLanguageRegistration
  },
  {
    'id': 'cpp',
    'name': 'C++',
    'aliases': [
      'c++'
    ],
    'import': (() => import('@codelex/langs/cpp')) as DynamicImportLanguageRegistration
  },
  {
    'id': 'css',
    'name': 'CSS',
    'import': (() => import('@codelex/langs/css')) as DynamicImportLanguageRegistration
  },
  {
    'id': 'glsl',
    'name': 'GLSL',
    'import': (() => import('@codelex/langs/glsl')) as DynamicImportLanguageRegistration
  },
  {
    'id': 'graphql',
    'name': 'GraphQL',
    'aliases': [
      'gql'
    ],
    'import': (() => import('@codelex/langs/graphql')) as DynamicImportLanguageRegistration
  },
  {
    'id': 'haml',
    'name': 'Ruby Haml',
    'import': (() => import('@codelex/langs/haml')) as DynamicImportLanguageRegistration
  },
  {
    'id': 'handlebars',
    'name': 'Handlebars',
    'aliases': [
      'hbs'
    ],
    'import': (() => import('@codelex/langs/handlebars')) as DynamicImportLanguageRegistration
  },
  {
    'id': 'html',
    'name': 'HTML',
    'import': (() => import('@codelex/langs/html')) as DynamicImportLanguageRegistration
  },
  {
    'id': 'html-derivative',
    'name': 'HTML (Derivative)',
    'import': (() => import('@codelex/langs/html-derivative')) as DynamicImportLanguageRegistration
  },
  {
    'id': 'http',
    'name': 'HTTP',
    'import': (() => import('@codelex/langs/http')) as DynamicImportLanguageRegistration
  },
  {
    'id': 'imba',
    'name': 'Imba',
    'import': (() => import('@codelex/langs/imba')) as DynamicImportLanguageRegistration
  },
  {
    'id': 'java',
    'name': 'Java',
    'import': (() => import('@codelex/langs/java')) as DynamicImportLanguageRegistration
  },
  {
    'id': 'javascript',
    'name': 'JavaScript',
    'aliases': [
      'js'
    ],
    'import': (() => import('@codelex/langs/javascript')) as DynamicImportLanguageRegistration
  },
  {
    'id': 'jinja',
    'name': 'Jinja',
    'import': (() => import('@codelex/langs/jinja')) as DynamicImportLanguageRegistration
  },
  {
    'id': 'jison',
    'name': 'Jison',
    'import': (() => import('@codelex/langs/jison')) as DynamicImportLanguageRegistration
  },
  {
    'id': 'json',
    'name': 'JSON',
    'import': (() => import('@codelex/langs/json')) as DynamicImportLanguageRegistration
  },
  {
    'id': 'json5',
    'name': 'JSON5',
    'import': (() => import('@codelex/langs/json5')) as DynamicImportLanguageRegistration
  },
  {
    'id': 'jsonc',
    'name': 'JSON with Comments',
    'import': (() => import('@codelex/langs/jsonc')) as DynamicImportLanguageRegistration
  },
  {
    'id': 'jsonl',
    'name': 'JSON Lines',
    'import': (() => import('@codelex/langs/jsonl')) as DynamicImportLanguageRegistration
  },
  {
    'id': 'jsx',
    'name': 'JSX',
    'import': (() => import('@codelex/langs/jsx')) as DynamicImportLanguageRegistration
  },
  {
    'id': 'julia',
    'name': 'Julia',
    'aliases': [
      'jl'
    ],
    'import': (() => import('@codelex/langs/julia')) as DynamicImportLanguageRegistration
  },
  {
    'id': 'less',
    'name': 'Less',
    'import': (() => import('@codelex/langs/less')) as DynamicImportLanguageRegistration
  },
  {
    'id': 'markdown',
    'name': 'Markdown',
    'aliases': [
      'md'
    ],
    'import': (() => import('@codelex/langs/markdown')) as DynamicImportLanguageRegistration
  },
  {
    'id': 'marko',
    'name': 'Marko',
    'import': (() => import('@codelex/langs/marko')) as DynamicImportLanguageRegistration
  },
  {
    'id': 'mdc',
    'name': 'MDC',
    'import': (() => import('@codelex/langs/mdc')) as DynamicImportLanguageRegistration
  },
  {
    'id': 'mdx',
    'name': 'MDX',
    'import': (() => import('@codelex/langs/mdx')) as DynamicImportLanguageRegistration
  },
  {
    'id': 'php',
    'name': 'PHP',
    'import': (() => import('@codelex/langs/php')) as DynamicImportLanguageRegistration
  },
  {
    'id': 'postcss',
    'name': 'PostCSS',
    'import': (() => import('@codelex/langs/postcss')) as DynamicImportLanguageRegistration
  },
  {
    'id': 'pug',
    'name': 'Pug',
    'aliases': [
      'jade'
    ],
    'import': (() => import('@codelex/langs/pug')) as DynamicImportLanguageRegistration
  },
  {
    'id': 'python',
    'name': 'Python',
    'aliases': [
      'py'
    ],
    'import': (() => import('@codelex/langs/python')) as DynamicImportLanguageRegistration
  },
  {
    'id': 'r',
    'name': 'R',
    'import': (() => import('@codelex/langs/r')) as DynamicImportLanguageRegistration
  },
  {
    'id': 'regexp',
    'name': 'RegExp',
    'aliases': [
      'regex'
    ],
    'import': (() => import('@codelex/langs/regexp')) as DynamicImportLanguageRegistration
  },
  {
    'id': 'sass',
    'name': 'Sass',
    'import': (() => import('@codelex/langs/sass')) as DynamicImportLanguageRegistration
  },
  {
    'id': 'scss',
    'name': 'SCSS',
    'import': (() => import('@codelex/langs/scss')) as DynamicImportLanguageRegistration
  },
  {
    'id': 'shellscript',
    'name': 'Shell',
    'aliases': [
      'bash',
      'sh',
      'shell',
      'zsh'
    ],
    'import': (() => import('@codelex/langs/shellscript')) as DynamicImportLanguageRegistration
  },
  {
    'id': 'sql',
    'name': 'SQL',
    'import': (() => import('@codelex/langs/sql')) as DynamicImportLanguageRegistration
  },
  {
    'id': 'stylus',
    'name': 'Stylus',
    'aliases': [
      'styl'
    ],
    'import': (() => import('@codelex/langs/stylus')) as DynamicImportLanguageRegistration
  },
  {
    'id': 'svelte',
    'name': 'Svelte',
    'import': (() => import('@codelex/langs/svelte')) as DynamicImportLanguageRegistration
  },
  {
    'id': 'ts-tags',
    'name': 'TypeScript with Tags',
    'aliases': [
      'lit'
    ],
    'import': (() => import('@codelex/langs/ts-tags')) as DynamicImportLanguageRegistration
  },
  {
    'id': 'tsx',
    'name': 'TSX',
    'import': (() => import('@codelex/langs/tsx')) as DynamicImportLanguageRegistration
  },
  {
    'id': 'typescript',
    'name': 'TypeScript',
    'aliases': [
      'ts'
    ],
    'import': (() => import('@codelex/langs/typescript')) as DynamicImportLanguageRegistration
  },
  {
    'id': 'vue',
    'name': 'Vue',
    'import': (() => import('@codelex/langs/vue')) as DynamicImportLanguageRegistration
  },
  {
    'id': 'vue-html',
    'name': 'Vue HTML',
    'import': (() => import('@codelex/langs/vue-html')) as DynamicImportLanguageRegistration
  },
  {
    'id': 'wasm',
    'name': 'WebAssembly',
    'import': (() => import('@codelex/langs/wasm')) as DynamicImportLanguageRegistration
  },
  {
    'id': 'wgsl',
    'name': 'WGSL',
    'import': (() => import('@codelex/langs/wgsl')) as DynamicImportLanguageRegistration
  },
  {
    'id': 'wit',
    'name': 'WebAssembly Interface Types',
    'import': (() => import('@codelex/langs/wit')) as DynamicImportLanguageRegistration
  },
  {
    'id': 'xml',
    'name': 'XML',
    'import': (() => import('@codelex/langs/xml')) as DynamicImportLanguageRegistration
  },
  {
    'id': 'yaml',
    'name': 'YAML',
    'aliases': [
      'yml'
    ],
    'import': (() => import('@codelex/langs/yaml')) as DynamicImportLanguageRegistration
  }
]

export const bundledLanguagesBase = Object.fromEntries(bundledLanguagesInfo.map(i => [i.id, i.import]))

export const bundledLanguagesAlias = Object.fromEntries(bundledLanguagesInfo.flatMap(i => i.aliases?.map(a => [a, i.import]) || []))

export type BundledLanguage =
  | 'angular-html'
  | 'angular-ts'
  | 'astro'
  | 'bash'
  | 'blade'
  | 'c'
  | 'c++'
  | 'coffee'
  | 'coffeescript'
  | 'cpp'
  | 'css'
  | 'glsl'
  | 'gql'
  | 'graphql'
  | 'haml'
  | 'handlebars'
  | 'hbs'
  | 'html'
  | 'html-derivative'
  | 'http'
  | 'imba'
  | 'jade'
  | 'java'
  | 'javascript'
  | 'jinja'
  | 'jison'
  | 'jl'
  | 'js'
  | 'json'
  | 'json5'
  | 'jsonc'
  | 'jsonl'
  | 'jsx'
  | 'julia'
  | 'less'
  | 'lit'
  | 'markdown'
  | 'marko'
  | 'md'
  | 'mdc'
  | 'mdx'
  | 'php'
  | 'postcss'
  | 'pug'
  | 'py'
  | 'python'
  | 'r'
  | 'regex'
  | 'regexp'
  | 'sass'
  | 'scss'
  | 'sh'
  | 'shell'
  | 'shellscript'
  | 'sql'
  | 'styl'
  | 'stylus'
  | 'svelte'
  | 'ts'
  | 'ts-tags'
  | 'tsx'
  | 'typescript'
  | 'vue'
  | 'vue-html'
  | 'wasm'
  | 'wgsl'
  | 'wit'
  | 'xml'
  | 'yaml'
  | 'yml'
  | 'zsh'

export const bundledLanguages = {
  ...bundledLanguagesBase,
  ...bundledLanguagesAlias,
} as Record<BundledLanguage, DynamicImportLanguageRegistration>
